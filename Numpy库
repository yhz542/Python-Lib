Numpy数据对象：ndarray（N维数组）numpy.ndarray

数组的属性：
dtype :数组中数据的类型
shape :数组各个维度的长度
size :大小或者说元素个数
itemsize :单独每一项的大小
data :数据
ndim :维度

example:
>>> x=np.array([[[1,2],[3,4]],[[5,6],[7,8]]])# 2*2*2维
>>> x.dtype
dtype('int32')
>>> x.shape
(2, 2, 2)
>>> x.size
8          # 2*2*2
>>> x.itemsize
4          # 32位int 4个字节
>>> x.data
<memory at 0x000001B7AF5C9138>  # 不明觉厉
>>> x.ndim
3

other example:
>>> x=np.array(((100,200,300),
	    (111,222,333),
	    (123,456,789)))# 3*3
>>> x.dtype
dtype('float64')
>>> x.shape
(3, 3)
>>> x.size
9
>>> x.itemsize
8           # 64位
>>> x.data
<memory at 0x000001B7AFDC38B8>
>>> x.ndim
2

shape可以查看数组的行列，或者改变数组的shape
forexample
x = np.array([[1,2],[3,4]])
x.shape
>>>(2,2)
x.shape=(4,1)

x
>>>[[1],[2],[3],[4]]

reshape也可以改变shape,但是返回的是reshape后的副本,原数组并没有改变
x.reshape(1,-1)
>>>[[1,2,3,4]]
x
>>>[[1],[2],[3],[4]]

axis=1代表对行操作
axis=0代表队列操作

np.ravel()
np.flatten()
都是将数组拉平成一维数组
不同的是前者返回的是视图
后者返回的是副本改变后者不会改变原数组
改变前者会改变原数组

np.squeeze()将所有数量等于1的维度全部压缩。只留下数目不为1的维度

np.delete()删除 参数分别为要删除的元素的所属数组，所处位置以及axis
np.arange(start,stop,step)生成一组数 可配合reshape形成数组
np.asarray（)将列表转换成数组
np.astype ()改变数据类型
np.hstack()按行合并
np.vstack()按列合并
np.concatenate(,axis)同上 可通过给axis赋值选择行还是列
np.tile()复制矩阵
np.repeat(array , repeats ,axis = None )将数组中的元素进行重复复制 ， axis不赋值意味着将返回扁平的一维数组。
np.c_[]按列合并 合成行
np.r_[]按行合并 合成列
np.column_stack()按列合并 concatenate hstack类似
np.row_stack()按行合并
np.insert(array , index , value ,axis=None) 按axis的下标index插入value值到array中，如果axis为默认值则直接按一维数组处理


np.newaxis添加一个新维度
a = np.arange(4)
a = [ 0 ,1 ,2, 3 ]
b= a[:,np.newaxis] 在列上添加一个维度
b= [[0],[1],[2],[3]]
c = a[np.newaxis ,:]在行上添加一个维度
c = [[0,1,2,3]]
np.info() numpy专用help

np数组可直接进行判断生成bool数组
a=[1,2,3]
a<4
[true , true , true]
